# name: CI/CD Pipeline for Chat Service

# on:
#   pull_request:
#     branches:
#       - main
#     paths:
#       - "apps/backend/chat-service/**"
#   push:
#     branches:
#       - main
#     paths:
#       - "apps/backend/chat-service/**"

# defaults:
#   run:
#     working-directory: apps/backend/chat-service

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Install dependencies
#         run: yarn install --no-immutable

#       - name: Run build
#         run: yarn build

#       - name: Archive build artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: build
#           path: ./apps/backend/chat-service/build

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Download build artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: build
#           path: ./apps/backend/chat-service/build

#       - name: Prepare Deployment Directories
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_IP }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           port: 22
#           script: |
#             mkdir -p /home/ubuntu/apps/chat-service/build
#             mkdir -p /home/ubuntu/apps/chat-service/build/configs

#       - name: Copy files to EC2
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.SERVER_IP }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           port: 22
#           source: "./apps/backend/chat-service/build/*"
#           target: "/home/ubuntu/apps/chat-service/build"

#       - name: Create .env File
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_IP }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           port: 22
#           script: |
#             echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> /home/ubuntu/apps/chat-service/build/configs/.env.production
#             echo "PORT=${{ secrets.CHAT_SERVICE_PORT }}" >> /home/ubuntu/apps/chat-service/build/configs/.env.production
#             echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> /home/ubuntu/apps/chat-service/build/configs/.env.production
#             echo "USER_SERVICE_URL=${{ secrets.USER_SERVICE_URL }}" >> /home/ubuntu/apps/chat-service/build/configs/.env.production
#             echo "SENDMESSAGE_API_ENDPOINT=${{ secrets.SENDMESSAGE_API_ENDPOINT }}" >> /home/ubuntu/apps/chat-service/build/configs/.env.production
#             echo "USERS_API_ENDPOINT=${{ secrets.USERS_API_ENDPOINT }}" >> /home/ubuntu/apps/chat-service/build/configs/.env.production

#       - name: Install Dependencies and Restart PM2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_IP }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           port: 22
#           script: |
#             # Load the full user environment for non-interactive shells
#             source /home/ubuntu/.nvm/nvm.sh
#             source /home/ubuntu/.profile

#             cd /home/ubuntu/apps/chat-service/build
#             yarn install --production

#             # Check if the PM2 process is running
#             if pm2 show chat-service > /dev/null; then
#               echo "Application is running. Restarting..."
#               pm2 restart chat-service
#             else
#               echo "Application is not running. Starting..."
#               pm2 start ecosystem.config.js --only chat-service
#             fi
